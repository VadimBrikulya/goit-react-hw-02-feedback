{"version":3,"sources":["Components/Statictics/Statistics.styled.js","Components/Statictics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.styled.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.styled.js","Components/Section/Section.js","Components/Notification/Notification.js","App.styled.js","App.js","index.js"],"names":["Item","styled","li","Statistics","this","props","good","neutral","bad","total","positivePercentage","Component","Button","button","Container","ul","FeedbackOptions","options","map","option","type","name","onClick","onLeaveFeedback","Title","h1","Section","title","children","Notification","message","Wrap","div","App","state","countTotalFeedback","countPositiveFeedbackPercentage","result","percentage","Math","round","e","target","setState","prevState","objKey","Object","keys","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAGaA,EAAOC,IAAOC,GAAV,iD,OCqCFC,E,4JAnCb,WACE,MAA0DC,KAAKC,MAAvDC,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAAKC,EAA5B,EAA4BA,MAAOC,EAAnC,EAAmCA,mBAEnC,OACE,8BACE,+BACE,cAACV,EAAD,UACE,0CAAaM,OAEf,cAACN,EAAD,UACE,6CAAgBO,OAElB,cAACP,EAAD,UACE,yCAAYQ,OAEd,cAACR,EAAD,UACE,2CAAcS,OAEhB,cAACT,EAAD,UACE,uDAA0BU,EAA1B,kB,GApBaC,aCFZC,EAASX,IAAOY,OAAV,4MAWNC,EAAYb,IAAOc,GAAV,oDAITf,EAAOC,IAAOC,GAAV,2ECcFc,E,4JA1Bb,WAAU,IAAD,OACP,OACE,cAACF,EAAD,UACGV,KAAKC,MAAMY,QAAQC,KAAI,SAACC,GACvB,OACE,cAAC,EAAD,UACE,cAACP,EAAD,CACEQ,KAAK,SACLC,KAAMF,EACNG,QAAS,EAAKjB,MAAMkB,gBAHtB,SAKGJ,KANMA,Y,GANOR,aCKfa,EANDvB,IAAOwB,GAAV,gGCoBIC,E,4JAjBb,WACE,MAA4BtB,KAAKC,MAAzBsB,EAAR,EAAQA,MAAOC,EAAf,EAAeA,SAEf,OACE,gCACE,cAAC,EAAD,UAAQD,IACPC,S,GAPajB,aCQPkB,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACC,mCACC,4BAAIA,OCQQC,G,MAZF9B,IAAO+B,IAAV,8PCmEKC,E,4MAxDXC,MAAQ,CACJ5B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIP2B,mBAAqB,WACjB,MAA+B,EAAKD,MACpC,OADA,EAAQ5B,KAAR,EAAcC,QAAd,EAAuBC,K,EAIzB4B,gCAAkC,WAC9B,IAAMC,EAAS,EAAKF,qBAEdG,EAAqB,IADV,EAAKJ,MAAd5B,KAC0B+B,EAClC,OAAOE,KAAKC,MAAMF,I,EAE3Bf,gBAAkB,SAACkB,GACjB,IAAMpB,EAAOoB,EAAEC,OAAOrB,KACtB,EAAKsB,UAAS,SAACC,GAAD,sBACXvB,EAAOuB,EAAUvB,GAAQ,O,4CAKjC,WACE,MAA+BjB,KAAK8B,MAA5B5B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACjBC,EAAQL,KAAK+B,qBACbzB,EAAqBN,KAAKgC,kCAE1BS,EAASC,OAAOC,KAAK3C,KAAK8B,OAChC,OACC,eAAC,EAAD,WACC,cAAC,EAAD,CAASP,MAAM,yBAAf,SACC,cAAC,EAAD,CAAiBV,QAAS4B,EAAQtB,gBAAiBnB,KAAKmB,oBAG9C,IAAVd,EACA,cAAC,EAAD,CAAcqB,QAAQ,sBAEtB,cAAC,EAAD,CAASH,MAAM,aAAf,SACC,cAAC,EAAD,CACCrB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAhDRC,aCNnBqC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.771a125d.chunk.js","sourcesContent":["  \r\nimport styled from \"@emotion/styled\";\r\n\r\nexport const Item = styled.li`\r\npadding-right:10px;\r\n`;","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Item } from \"./Statistics.styled\";\r\n\r\nclass Statistics extends Component {\r\n  render() {\r\n    const { good, neutral, bad, total, positivePercentage } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <ul>\r\n          <Item>\r\n            <span>Good: {good}</span>\r\n          </Item>\r\n          <Item>\r\n            <span>Neutral: {neutral}</span>\r\n          </Item>\r\n          <Item>\r\n            <span>Bad: {bad}</span>\r\n          </Item>\r\n          <Item>\r\n            <span>Total: {total}</span>\r\n          </Item>\r\n          <Item>\r\n            <span>Positive feedback: {positivePercentage}%</span>\r\n          </Item>\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.string,\r\n};\r\n\r\nexport default Statistics;","import styled from \"@emotion/styled\";\r\n\r\nexport const Button = styled.button`\r\n  background-color: inherit;\r\n  border: 2px solid teal;\r\n  border-radius: 4px;\r\n  &:hover {\r\n    cursor: pointer;\r\n    color: yellowgreen;\r\n    border-color:yellowgreen;\r\n  }\r\n`;\r\n\r\nexport const Container = styled.ul`\r\n  /* display: flex; */\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  margin-right: 25px;\r\n  padding-bottom:10px;\r\n`;","import { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button, Container, Item } from \"./FeedbackOptions.styled\";\r\n\r\nclass FeedbackOptions extends Component {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {this.props.options.map((option) => {\r\n          return (\r\n            <Item key={option}>\r\n              <Button\r\n                type=\"button\"\r\n                name={option}\r\n                onClick={this.props.onLeaveFeedback}\r\n              >\r\n                {option}\r\n              </Button>\r\n            </Item>\r\n          );\r\n        })}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;","\r\nimport styled from \"@emotion/styled\";\r\n\r\nconst Title = styled.h1`\r\n  margin-bottom: 20px;\r\n  font-size: 35px;\r\n  font-weight: normal;\r\n`;\r\n\r\nexport default Title;","\r\nimport { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Title from \"./Section.styled\";\r\n\r\nclass Section extends Component {\r\n  render() {\r\n    const { title, children } = this.props;\r\n\r\n    return (\r\n      <div>\r\n        <Title>{title}</Title>\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.object,\r\n};\r\n\r\nexport default Section;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{message}</p>\r\n\t\t</>\r\n\t);\r\n};\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\nexport default Notification;","import styled from \"@emotion/styled\";\r\n\r\nconst Wrap = styled.div`\r\n  border-bottom-style:inset;\r\n  max-width: 1170px;\r\n  min-height: 300px;\r\n    margin-left: auto;  \r\n    margin-right: auto;\r\n    padding-top: 160px;\r\n    padding-left: 160px;\r\n    display: flex;\r\n    flex-direction: column;\r\n`;\r\n\r\nexport default Wrap;","\nimport React, { Component } from \"react\";\n\nimport Statistics from \"./Components/Statictics/Statistics\";\nimport FeedbackOptions from \"./Components/FeedbackOptions/FeedbackOptions\";\nimport Section from \"./Components/Section/Section\";\nimport Notification from \"./Components/Notification/Notification\";\n\nimport \"./index.css\";\nimport \"./App.css\";\nimport Wrap from \"App.styled\";\n\n class App extends Component {\n    state = {\n        good: 0,\n        neutral: 0,\n        bad: 0,\n      };\n\n\n      countTotalFeedback = () => {\n          const { good, neutral, bad } = this.state;\n          return good + neutral + bad;\n        };\n\n        countPositiveFeedbackPercentage = () => {\n            const result = this.countTotalFeedback();\n            const { good } = this.state;\n            const percentage = (good * 100) / result;\n            return Math.round(percentage);\n        };\n   onLeaveFeedback = (e) => {\n     const name = e.target.name;\n     this.setState((prevState) => ({\n       [name]: prevState[name] + 1\n     }));\n   };\n\n\nrender() {\n\t\tconst { good, neutral, bad } = this.state;\n\t\tconst total = this.countTotalFeedback();\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\n\n\t\tconst objKey = Object.keys(this.state);\n\t\treturn (\n\t\t\t<Wrap>\n\t\t\t\t<Section title=\"Please leave feedback:\">\n\t\t\t\t\t<FeedbackOptions options={objKey} onLeaveFeedback={this.onLeaveFeedback} />\n\t\t\t\t</Section>\n\n\t\t\t\t{total === 0 ? (\n\t\t\t\t\t<Notification message=\"No feedback given\" />\n\t\t\t\t) : (\n\t\t\t\t\t<Section title=\"Statistics\">\n\t\t\t\t\t\t<Statistics\n\t\t\t\t\t\t\tgood={good}\n\t\t\t\t\t\t\tneutral={neutral}\n\t\t\t\t\t\t\tbad={bad}\n\t\t\t\t\t\t\ttotal={total}\n\t\t\t\t\t\t\tpositivePercentage={positivePercentage}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Section>\n\t\t\t\t)}\n\t\t\t</ Wrap>\n\t\t);\n\t}\n}\n\nexport default App;\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}